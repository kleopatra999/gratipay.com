from __future__ import absolute_import, division, print_function, unicode_literals

from aspen.http import status_strings

from gratipay.utils.i18n import HTTP_ERRORS, LocalizedErrorResponse

[----------------------------------------]

try:
    _
except NameError:
    _ = lambda a: a
banner = _("Eep!")
code = response.code
msg = _(HTTP_ERRORS.get(code, status_strings.get(code, '')))
try:
    assert msg
except Exception as e:
    website.tell_sentry(e, state)

if isinstance(response, LocalizedErrorResponse):
    response.render_body(state)
err = response.body
if code == 500 and not err:
    err = _("Looks like you've found a bug! Sorry for the inconvenience, we'll get it fixed ASAP!")

suppress_sidebar = True
[----------------------------------------] text/html
{% extends "templates/base.html" %}
{% set title = code %}
{% block content %}
    <p>{{ msg }}</p>
    <pre>{{ err }}</pre>
{% endblock %}
[----------------------------------------] application/json via json_dump
{ "error_code": code
, "error_message_short": msg
, "error_message_long": err
 }
[----------------------------------------] text/plain
{{msg}}, program!
{{err}}
